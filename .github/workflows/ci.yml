name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost -u root -prootpassword" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build project
        working-directory: backend
        run: mvn clean compile

      - name: Run unit tests
        working-directory: backend
        run: mvn test -Dtest="*ServiceTest,BackendApplicationTests"

      - name: Run integration tests
        working-directory: backend
        run: mvn test -Dtest="*ApiTest"

      - name: Setup Node.js for frontend
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend for CI
        working-directory: frontend
        run: npm run build

      - name: Preview frontend (simulates prod environment)
        working-directory: frontend
        run: |
          npm run preview -- --port 5173 --host 0.0.0.0 &
          echo "Frontend preview started"
          
      - name: Wait for frontend to be ready
        run: |
          echo "Waiting for frontend to start..."
          timeout 30s bash -c 'until curl -f http://localhost:5173; do sleep 2; done'
          echo "Frontend is ready"

      # Start backend for UI tests (uses test profile with H2 DB, overridden via env for reliability)
      - name: Start backend for UI tests
        working-directory: backend
        run: |
          SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver SPRING_DATASOURCE_USERNAME=sa SPRING_DATASOURCE_PASSWORD= SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.H2Dialect mvn spring-boot:run -Dspring-boot.run.profiles=test &
          echo "Backend started in background"
          # Wait for backend to be ready (adjust timeout if needed)
          timeout 30s bash -c 'until curl -f http://localhost:8081/api/tasks; do sleep 2; done'
          echo "Backend is ready on port 8081"

      - name: Setup Chrome for UI tests
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Run UI automation tests
        working-directory: backend
        run: mvn test -Dtest="*UITest" -Dwebdriver.chrome.args="--headless,--no-sandbox,--disable-dev-shm-usage,--disable-gpu,--window-size=1920,1080"
        env:
          DISPLAY: ":99"

      # Stop backend after UI tests
      - name: Stop backend
        run: |
          pkill -f "spring-boot:run" || true
          echo "Backend stopped"

      - name: Run BDD tests
        working-directory: backend
        run: mvn test -Dtest="CucumberTest"

      - name: Generate test report
        working-directory: backend
        run: mvn surefire-report:report
        if: always()

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: backend/target/surefire-reports/
